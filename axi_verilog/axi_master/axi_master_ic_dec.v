//------------------------------------------------------------------
//-- File generated by RobustVerilog parser
//-- RobustVerilog version 1.5g (limited free version) Jul 5 2011
//-- Invoked Wed Mar 28 12:55:30 2012
//-- Source file: ic_dec.v
//-- Parent file: ic_addr.v
//-- Project directory: C:/Users/MARIOS/Desktop/VLSI/RobustVerilog_free1.5_win/RobustVerilog_free1.5_win/examples/axi_master/trunk/run/
//-- Target directory: out/
//-- Command flags: ..\..\..\..\robust.exe ../robust_axi_master.pro -gui 
//-- www.provartec.com/edatools ... info@provartec.com
//------------------------------------------------------------------






module axi_master_ic_dec (M0_AADDR,M1_AADDR,M2_AADDR,M0_AID,M1_AID,M2_AID,M0_ASLV,M1_ASLV,M2_ASLV,M0_AIDOK,M1_AIDOK,M2_AIDOK);

   input [32-1:0]               M0_AADDR;
   input [32-1:0]               M1_AADDR;
   input [32-1:0]               M2_AADDR;
   input [4-1:0]                   M0_AID;
   input [4-1:0]                   M1_AID;
   input [4-1:0]                   M2_AID;
   output [1-1:0]               M0_ASLV;
   output [1-1:0]               M1_ASLV;
   output [1-1:0]               M2_ASLV;
   output                       M0_AIDOK;
   output                       M1_AIDOK;
   output                       M2_AIDOK;

   parameter                       DEC_MSB =  32 - 1;
   parameter                       DEC_LSB =  32 - 1;
   
   reg [1-1:0]                   M0_ASLV;
   reg [1-1:0]                   M1_ASLV;
   reg [1-1:0]                   M2_ASLV;
   reg                           M0_AIDOK;
   reg                           M1_AIDOK;
   reg                           M2_AIDOK;
   
   wire [DEC_MSB:DEC_LSB]                     M0_AADDR_DEC;
   wire [DEC_MSB:DEC_LSB]                     M1_AADDR_DEC;
   wire [DEC_MSB:DEC_LSB]                     M2_AADDR_DEC;


   assign                                     M0_AADDR_DEC = M0_AADDR[DEC_MSB:DEC_LSB];
   assign                                     M1_AADDR_DEC = M1_AADDR[DEC_MSB:DEC_LSB];
   assign                                     M2_AADDR_DEC = M2_AADDR[DEC_MSB:DEC_LSB];
   
     always @(M0_AADDR or M0_AIDOK)                       
       begin        
      case (M0_AIDOK)    
        1'b1 : M0_ASLV = 1'd0;  
            default : M0_ASLV = 1'd0;                     
      endcase                                             
       end                                                    

   always @(M0_AID)                                  
     begin                                             
    case (M0_AID[4-1:0])                                
      4'b0011 : M0_AIDOK = 1'b1; 
      default : M0_AIDOK = 1'b0;                 
    endcase                                        
     end    
  
     always @(M1_AADDR or M1_AIDOK)                       
       begin        
      case (M1_AIDOK)    
        1'b1 : M1_ASLV = 1'd0;  
            default : M1_ASLV = 1'd0;                     
      endcase                                             
       end                                                    

   always @(M1_AID)                                  
     begin                                             
    case (M1_AID[4-1:0])                                
      4'b0010 : M1_AIDOK = 1'b1; 
      default : M1_AIDOK = 1'b0;                 
    endcase                                        
     end    
  
     always @(M2_AADDR or M2_AIDOK)                       
       begin        
      case (M2_AIDOK)    
        1'b1 : M2_ASLV = 1'd0;  
            default : M2_ASLV = 1'd0;                     
      endcase                                             
       end                                                    

   always @(M2_AID)                                  
     begin                                             
    case (M2_AID[4-1:0])                                
      4'b1010 : M2_AIDOK = 1'b1; 
      default : M2_AIDOK = 1'b0;                 
    endcase                                        
     end    
  
      
endmodule






